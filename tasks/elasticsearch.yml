---
- name: Add ElasticSearch repo apt key.
  apt_key:
    url: https://packages.elastic.co/GPG-KEY-elasticsearch
    state: present

- name: Add ElasticSearch apt repo.
  apt_repository:
    repo: "deb http://packages.elastic.co/elasticsearch/2.x/debian stable main"
    state: present
  notify:
    - reload systemd

- name: Install ElasticSearch.
  apt:
    name: elasticsearch
    state: latest
  notify:
    - reload systemd
    - restart elasticsearch

- name: Configure ElasticSearch.
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - regexp: 'cluster\.name:'
      line: 'cluster.name: {{ elk_cluster_name }}'
    - regexp: 'network\.host:'
      line: 'network.host: "localhost"'
    - regexp: 'bootstrap\.mlockall:'
      line: 'bootstrap.mlockall: true'

      # Massive reduction in load when cache field type set to "soft".
      # Permits GC on cached index objects:
      # See http://docs.oracle.com/javase/6/docs/api/java/lang/ref/SoftReference.html
    - regexp: 'index\.cache\.field\.type:'
      line: 'index.cache.field.type: soft'

      # By default the ES cache is greedy. Let's set some sane limits to prevent OOMs.
      # See http://blog.sematext.com/2012/05/17/elasticsearch-cache-usage/
    - regexp: 'index\.cache\.field\.max_size:'
      line: 'index.cache.field.max_size: 50000'

    - regexp: 'index\.cache\.field\.expire:'
      line: 'index.cache.field.expire: 10m'

      # Force presence of snapshot config line, even though snapshots are disabled by default.
      # Doing this to prevent a failed snapshot action on the first attempt, since the handlers
      # will not have been run yet. Flushing the handlers may be a more elegant solution.
    - regexp: 'path\.repo:'
      line: 'path.repo: {{ elasticsearch_snapshot_directory }}'
  notify:
    - restart elasticsearch

- name: Start elasticsearch service.
  service:
    name: elasticsearch
    state: running
    enabled: yes

